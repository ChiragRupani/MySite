{"version":3,"sources":["AboutMe.tsx","Blogs.tsx","Projects.tsx","Content.tsx","Footer.tsx","Header.tsx","Layout.tsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["AboutMe","props","id","className","href","title","React","Blogs","state","blogs","Array","fetch","response","json","this","setState","map","blog","Card","CardHeader","CardTitle","CardBody","CardText","content","CardLink","blogURL","rel","target","ID","Projects","Content","data-offset","Footer","isThemeOpen","currentTheme","toggleThemeDD","bind","role","Dropdown","isOpen","toggle","DropdownToggle","caret","d","width","height","viewBox","fill","xmlns","fillRule","DropdownMenu","DropdownItem","onClick","e","active","Date","getFullYear","Header","observer","isNavMenuOpened","onSectionClick","IntersectionObserver","entries","forEach","entry","isIntersecting","root","rootMargin","threshold","document","querySelectorAll","section","observe","disconnect","event","sectionID","getSectionName","window","scrollTo","top","getElementById","offsetTop","behavior","element","index","lastIndexOf","substr","Navbar","dark","expand","NavbarBrand","src","alt","NavbarToggler","data-toggle","data-target","aria-controls","aria-expanded","Collapse","navbar","Nav","Layout","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","a","waiting"],"mappings":"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","file":"static/js/main.952c3f73.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport default class AboutMe extends React.Component<{}, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"Home\">\r\n        <div className=\"centered aboutme\">\r\n          <div>\r\n            <h2>\r\n              Hi, my name is <span className=\"name\">Chirag Rupani.</span>\r\n            </h2>\r\n            <h3>Full stack software developer</h3>\r\n            <div className=\"otherContent\">\r\n              <div className=\"hireme\">\r\n                Hire Me - open for new opportunities!\r\n                <span className=\"connectLink\">\r\n                  <a href=\"mailto:chiragrupani23@outlook.com\" title=\"EmailID\">\r\n                    Contact Me\r\n                  </a>\r\n                </span>\r\n              </div>\r\n              <ul>\r\n                <li>\r\n                  Proficient in C#, T-SQL, Asp.Net Core, TypeScript, JavaScript,\r\n                  Angular, ReactJS, Redux, Web API, Micro services and Microsoft\r\n                  Azure\r\n                </li>\r\n                <li> 7+ Years of passionate software development</li>\r\n                <li> Microsoft Certified Professional </li>\r\n                <li>\r\n                  Interested in writing clean code, TDD, Progressive Web Apps,\r\n                  Micro service and continuous delivery\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardLink,\r\n  CardText,\r\n  CardTitle,\r\n} from 'reactstrap';\r\nimport BlogModel from './Models/BlogModel';\r\n\r\nexport default class Blogs extends React.Component<{}, { blogs: BlogModel[] }> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { blogs: Array<BlogModel>() };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let response = await fetch('data/BlogData.json');\r\n    let blogs: BlogModel[] = await response.json();\r\n    this.setState({ blogs });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"Blogs\">\r\n        <div className=\"centered\">\r\n          <h2 className=\"mb-4\">My Blogs</h2>\r\n\r\n          <div className=\"blogs\">\r\n            {this.state.blogs.map((blog) => {\r\n              return (\r\n                <Card className=\"text-white bg-dark\" key={blog.ID}>\r\n                  <CardHeader>\r\n                    <CardTitle>{blog.title}</CardTitle>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <CardText>{blog.content}</CardText>\r\n                    <CardLink\r\n                      href={blog.blogURL}\r\n                      rel=\"noreferrer noopener\"\r\n                      target=\"blank\"\r\n                    >\r\n                      Read more...\r\n                    </CardLink>\r\n                  </CardBody>\r\n                </Card>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default class Projects extends React.Component<{}, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"Projects\">\r\n        <div className=\"centered projects\">\r\n          <h3 className=\"mb-4\">Some things I have built</h3>\r\n          <article>\r\n            <h4>karma-chromiumedge-launcher</h4>\r\n            <p>\r\n              Karma plugin and launcher for Chromium Edge Canary, Dev and Beta\r\n            </p>\r\n          </article>\r\n          {/* <article>\r\n            <h4>BlueMoon</h4>\r\n            <p>Dark Theme for VS Code</p>\r\n          </article> */}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport AboutMe from './AboutMe';\r\nimport './Assets/content.css';\r\nimport Blogs from './Blogs';\r\nimport Projects from './Projects';\r\n\r\nexport default class Content extends React.Component<{}, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"main scroller\" id=\"main\" data-offset=\"0\">\r\n        <AboutMe />\r\n        <Blogs />\r\n        <Projects />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n} from 'reactstrap';\r\nimport './Assets/footer.css';\r\n\r\nexport default class Footer extends React.Component<\r\n  {},\r\n  { isThemeOpen: boolean; currentTheme: string }\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isThemeOpen: false, currentTheme: 'Dark Theme' };\r\n    this.toggleThemeDD = this.toggleThemeDD.bind(this);\r\n  }\r\n\r\n  toggleThemeDD() {\r\n    this.setState({ isThemeOpen: !this.state.isThemeOpen });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer role=\"contentinfo\" className=\"footer\">\r\n        <div className=\"centered\">\r\n          <div className=\"dropup d-none\">\r\n            <Dropdown\r\n              isOpen={this.state.isThemeOpen}\r\n              toggle={this.toggleThemeDD}\r\n            >\r\n              <DropdownToggle caret d>\r\n                <svg\r\n                  width=\"1.2em\"\r\n                  height=\"1.2em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  className=\"bi bi-gear mr-2 mb-1\"\r\n                  fill=\"currentColor\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M8.837 1.626c-.246-.835-1.428-.835-1.674 0l-.094.319A1.873 1.873 0 0 1 4.377 3.06l-.292-.16c-.764-.415-1.6.42-1.184 1.185l.159.292a1.873 1.873 0 0 1-1.115 2.692l-.319.094c-.835.246-.835 1.428 0 1.674l.319.094a1.873 1.873 0 0 1 1.115 2.693l-.16.291c-.415.764.42 1.6 1.185 1.184l.292-.159a1.873 1.873 0 0 1 2.692 1.116l.094.318c.246.835 1.428.835 1.674 0l.094-.319a1.873 1.873 0 0 1 2.693-1.115l.291.16c.764.415 1.6-.42 1.184-1.185l-.159-.291a1.873 1.873 0 0 1 1.116-2.693l.318-.094c.835-.246.835-1.428 0-1.674l-.319-.094a1.873 1.873 0 0 1-1.115-2.692l.16-.292c.415-.764-.42-1.6-1.185-1.184l-.291.159A1.873 1.873 0 0 1 8.93 1.945l-.094-.319zm-2.633-.283c.527-1.79 3.065-1.79 3.592 0l.094.319a.873.873 0 0 0 1.255.52l.292-.16c1.64-.892 3.434.901 2.54 2.541l-.159.292a.873.873 0 0 0 .52 1.255l.319.094c1.79.527 1.79 3.065 0 3.592l-.319.094a.873.873 0 0 0-.52 1.255l.16.292c.893 1.64-.902 3.434-2.541 2.54l-.292-.159a.873.873 0 0 0-1.255.52l-.094.319c-.527 1.79-3.065 1.79-3.592 0l-.094-.319a.873.873 0 0 0-1.255-.52l-.292.16c-1.64.893-3.433-.902-2.54-2.541l.159-.292a.873.873 0 0 0-.52-1.255l-.319-.094c-1.79-.527-1.79-3.065 0-3.592l.319-.094a.873.873 0 0 0 .52-1.255l-.16-.292c-.892-1.64.902-3.433 2.541-2.54l.292.159a.873.873 0 0 0 1.255-.52l.094-.319z\"\r\n                  />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M8 5.754a2.246 2.246 0 1 0 0 4.492 2.246 2.246 0 0 0 0-4.492zM4.754 8a3.246 3.246 0 1 1 6.492 0 3.246 3.246 0 0 1-6.492 0z\"\r\n                  />\r\n                </svg>\r\n                <span className=\"mr-1\">Theme</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  onClick={(e) => this.setState({ currentTheme: 'Dark Theme' })}\r\n                  active={this.state.currentTheme === 'Dark Theme'}\r\n                >\r\n                  <svg\r\n                    width=\"1.2em\"\r\n                    height=\"1.2em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    className=\"bi bi-moon mr-2 mb-1\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M14.53 10.53a7 7 0 0 1-9.058-9.058A7.003 7.003 0 0 0 8 15a7.002 7.002 0 0 0 6.53-4.47z\"\r\n                    />\r\n                  </svg>\r\n                  Dark Theme\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={(e) =>\r\n                    this.setState({ currentTheme: 'Light Theme' })\r\n                  }\r\n                  active={this.state.currentTheme === 'Light Theme'}\r\n                >\r\n                  <svg\r\n                    width=\"1.2em\"\r\n                    height=\"1.2em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    className=\"bi bi-brightness-high mr-2 mb-1\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\"\r\n                    />\r\n                  </svg>\r\n                  Light Theme\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  onClick={(e) =>\r\n                    this.setState({ currentTheme: 'High Constrast Theme' })\r\n                  }\r\n                  active={this.state.currentTheme === 'High Constrast Theme'}\r\n                >\r\n                  High Constrast Theme\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          </div>\r\n\r\n          <div>© Chirag Rupani {new Date().getFullYear()}</div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler } from 'reactstrap';\r\nimport './Assets/header.css';\r\n\r\nexport default class Header extends React.Component<\r\n  {},\r\n  { active: string; isNavMenuOpened: boolean }\r\n> {\r\n  observer: IntersectionObserver | null = null;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { active: '', isNavMenuOpened: false };\r\n    this.onSectionClick = this.onSectionClick.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let options = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.2,\r\n    };\r\n\r\n    let callback: IntersectionObserverCallback = (entries, observer) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          this.setState({ active: entry.target.id });\r\n        }\r\n      });\r\n    };\r\n\r\n    this.observer = new IntersectionObserver(callback, options);\r\n\r\n    let sections = document.querySelectorAll('#main > section');\r\n    sections.forEach((section) => this.observer?.observe(section));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.observer) {\r\n      this.observer.disconnect();\r\n    }\r\n  }\r\n\r\n  onSectionClick(event: React.MouseEvent<HTMLAnchorElement>) {\r\n    let sectionID = this.getSectionName(event.target as HTMLAnchorElement);\r\n\r\n    window.scrollTo({\r\n      top: (document.getElementById(sectionID)?.offsetTop ?? 0) - 55,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  private getSectionName(element: HTMLAnchorElement) {\r\n    let section = element.href;\r\n    let index = section.lastIndexOf('#');\r\n    let sectionID = section.substr(index >= 0 ? index + 1 : 0);\r\n    return sectionID;\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ isNavMenuOpened: !this.state.isNavMenuOpened });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Navbar\r\n          dark={true}\r\n          expand=\"md\"\r\n          className=\"navbar-custom fixed-top d-flex text-center\"\r\n          id=\"projectNavbar\"\r\n        >\r\n          <NavbarBrand href=\"#Home\">\r\n            <img src=\"favicon-32x32.png\" alt=\"\"></img>\r\n          </NavbarBrand>\r\n          <NavbarToggler\r\n            onClick={this.toggle}\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNavAltMarkup\"\r\n            aria-controls=\"navbarNavAltMarkup\"\r\n            aria-expanded=\"false\"\r\n          />\r\n\r\n          <Collapse\r\n            id=\"navbarNavAltMarkup\"\r\n            navbar={true}\r\n            isOpen={this.state.isNavMenuOpened}\r\n          >\r\n            <Nav className=\"ml-auto text-right pr-3\" navbar={true}>\r\n              <a\r\n                className={`nav-item nav-link ${\r\n                  this.state.active === 'Home' ? 'active' : ''\r\n                } pageLink`}\r\n                href=\"#Home\"\r\n                onClick={this.onSectionClick}\r\n              >\r\n                About Me\r\n              </a>\r\n              <a\r\n                className={`nav-item nav-link ${\r\n                  this.state.active === 'Blogs' ? 'active' : ''\r\n                } pageLink`}\r\n                href=\"#Blogs\"\r\n                onClick={this.onSectionClick}\r\n              >\r\n                Blogs\r\n              </a>\r\n              <a\r\n                className={`nav-item nav-link ${\r\n                  this.state.active === 'Projects' ? 'active' : ''\r\n                } pageLink`}\r\n                href=\"#Projects\"\r\n                onClick={this.onSectionClick}\r\n              >\r\n                Projects\r\n              </a>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Content from './Content';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\n\r\nexport default class Layout extends React.Component<{}, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Content />\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './Assets/App.css';\nimport Layout from './Layout';\n\nexport default class App extends React.Component<{}, {}> {\n  render() {\n    return (\n      <div>\n        <Layout />\n      </div>\n    );\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Assets/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n  serviceWorker.register({\n    onUpdate: async (registration) => {\n      // We want to run this code only if we detect a new service worker is\n      // waiting to be activated.\n      // Details about it: https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle\n      if (registration && registration.waiting) {\n        await registration.unregister();\n        // Once the service worker is unregistered, we can reload the page to let\n        // the browser download a fresh copy of our app (invalidating the cache)\n        window.location.reload();\n      }\n    },\n  });\n} else {\n  serviceWorker.unregister();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}