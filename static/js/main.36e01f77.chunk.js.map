{"version":3,"sources":["Content.tsx","FocusTrapper.tsx","SetTheme.ts","ThemeMenu.tsx","Footer.tsx","Header.tsx","Layout.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["AboutMe","React","Blogs","Projects","Content","props","className","id","data-offset","fallback","FocusTrapper","homeButton","themeButton","onFocus","event","firstFocusable","lastFocusable","IsCurrentElementLast","focus","this","document","getElementById","tabIndex","setTheme","isDark","documentElement","classList","add","remove","ThemeMenu","themeKey","setSelectedTheme","selectedTheme","setState","currentTheme","localStorage","setItem","toggleThemeMenuOpen","bind","getItem","state","isThemeOpen","Dropdown","isOpen","toggle","DropdownToggle","caret","width","height","viewBox","fill","xmlns","fillRule","d","DropdownMenu","DropdownItem","onClick","e","active","Footer","role","Date","getFullYear","Header","observer","navRef","isNavMenuOpened","onSectionClick","handleDocumentClick","window","IntersectionObserver","entries","forEach","entry","isIntersecting","target","root","rootMargin","threshold","setTimeout","querySelectorAll","section","observe","addEventListener","disconnect","removeEventListener","container","current","contains","sectionID","getSectionName","element","scrollTo","top","offsetTop","behavior","href","index","lastIndexOf","substr","ref","Navbar","dark","expand","NavbarBrand","aria-label","src","alt","NavbarToggler","data-toggle","data-target","aria-controls","aria-expanded","Collapse","navbar","Nav","tag","Layout","Component","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","a","waiting"],"mappings":"4UAGMA,EAAUC,QACd,kBAAM,gCAEFC,EAAQD,QACZ,kBAAM,gCAEFE,EAAWF,QACf,kBAAM,gCAGaG,E,kDACnB,WAAYC,GAAQ,uCACZA,G,0CAGR,WACE,OACE,sBAAMC,UAAU,gBAAgBC,GAAG,OAAOC,cAAY,IAAtD,SACE,eAAC,WAAD,CAAgBC,SAAU,6CAA1B,UACE,cAACT,EAAD,IACA,cAACE,EAAD,IACA,cAACC,EAAD,a,GAX2BF,aCXhBS,E,4MAIXC,gB,IACAC,iB,IAORC,QAAU,SAACC,GACT,IAAIC,EAAiB,EAAKJ,WACtBK,EAAgB,EAAKJ,YAErB,EAAKP,MAAMY,qBACC,OAAdF,QAAc,IAAdA,KAAgBG,QAEH,OAAbF,QAAa,IAAbA,KAAeE,S,uDAZnB,WACEC,KAAKR,WAAaS,SAASC,eAAe,cAC1CF,KAAKP,YAAcQ,SAASC,eAAe,e,oBAc7C,WACE,OAAO,qBAAKC,SAAU,EAAGT,QAASM,KAAKN,c,GAxBDZ,a,gDCFnC,SAASsB,EAASC,GACnBA,GACFJ,SAASK,gBAAgBC,UAAUC,IAAI,cACvCP,SAASK,gBAAgBC,UAAUE,OAAO,iBAE1CR,SAASK,gBAAgBC,UAAUC,IAAI,eACvCP,SAASK,gBAAgBC,UAAUE,OAAO,e,ICGzBC,E,kDAMnB,WAAYxB,GAAQ,IAAD,uBACjB,cAAMA,IAHAyB,SAA6B,gBAElB,EAiCnBC,iBAAmB,SAACP,GAClB,IAAIQ,EAAgBR,EAAS,aAAe,cAC5C,EAAKS,SAAS,CAAEC,aAAcF,IAC9BT,EAASC,GACTW,aAAaC,QAAQ,EAAKN,SAAUE,IAnCpC,EAAKK,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAG3B,IAAMJ,EAAeC,aAAaI,QAAQ,EAAKT,UAL9B,OAMI,OAAjBI,GACFX,EAA0B,eAAjBW,GACT,EAAKM,MAAQ,CACXN,eACAO,aAAa,KAGf,EAAKD,MAAQ,CACXN,aAAc,aACdO,aAAa,GAEflB,GAAS,GACTY,aAAaC,QAAQ,EAAKN,SAAU,eAlBrB,E,uDA6BnB,WACEX,KAAKc,SAAS,CAAEQ,aAActB,KAAKqB,MAAMC,gB,oBAU3C,WAAU,IAAD,OACP,OACE,qBAAKnC,UAAU,SAAf,SACE,eAACoC,EAAA,EAAD,CACEC,OAAQxB,KAAKqB,MAAMC,YACnBG,OAAQzB,KAAKkB,oBAFf,UAIE,eAACQ,EAAA,EAAD,CAAgBC,OAAK,EAACvC,GAAG,YAAzB,UACE,sBACEwC,MAAM,QACNC,OAAO,QACPC,QAAQ,YACR3C,UAAU,uBACV4C,KAAK,eACLC,MAAM,6BANR,UAQE,sBACEC,SAAS,UACTC,EAAE,uuCAEJ,sBACED,SAAS,UACTC,EAAE,kIAGN,sBAAM/C,UAAU,OAAhB,sBAEF,eAACgD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,QAAS,SAACC,GAAD,OAAO,EAAK1B,kBAAiB,IACtC2B,OAAoC,eAA5BvC,KAAKqB,MAAMN,aAFrB,SAIE,sBAAK5B,UAAU,YAAf,UACE,qBACEyC,MAAM,QACNC,OAAO,QACPC,QAAQ,YACR3C,UAAU,uBACV4C,KAAK,eACLC,MAAM,6BANR,SAQE,sBACEC,SAAS,UACTC,EAAE,6FAXR,kBAiBF,cAACE,EAAA,EAAD,CACEC,QAAS,SAACC,GAAD,OAAO,EAAK1B,kBAAiB,IACtC2B,OAAoC,gBAA5BvC,KAAKqB,MAAMN,aAFrB,SAIE,sBAAK5B,UAAU,YAAf,UACE,qBACEyC,MAAM,QACNC,OAAO,QACPC,QAAQ,YACR3C,UAAU,kCACV4C,KAAK,eACLC,MAAM,6BANR,SAQE,sBACEC,SAAS,UACTC,EAAE,wqBAXR,+B,GAnGyBpD,aCLlB0D,E,4JACnB,WACE,OACE,wBAAQC,KAAK,cAActD,UAAU,SAArC,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,IACA,uDAAsB,IAAIuD,MAAOC,0B,GANP7D,a,wCCAf8D,G,wDAQnB,WAAY1D,GAAQ,IAAD,8BACjB,cAAMA,IALR2D,SAAwC,KAIrB,EAFnBC,YAEmB,EAGjB,EAAKA,OAAShE,cACd,EAAKuC,MAAQ,CAAEkB,OAAQ,GAAIQ,iBAAiB,GAC5C,EAAKC,eAAiB,EAAKA,eAAe7B,KAApB,gBACtB,EAAKM,OAAS,EAAKA,OAAON,KAAZ,gBACd,EAAK8B,oBAAsB,EAAKA,oBAAoB9B,KAAzB,gBAPV,E,qDAUnB,WAAqB,IAAD,OAOlB,GAAI+B,OAAOC,qBAAsB,CAS/BnD,KAAK6C,SAAW,IAAIM,sBARyB,SAACC,EAASP,GACrDO,EAAQC,SAAQ,SAACC,GACXA,EAAMC,gBACR,EAAKzC,SAAS,CAAEyB,OAAQe,EAAME,OAAOpE,UAV/B,CACZqE,KAAM,KACNC,WAAY,MACZC,UAAW,CAAC,MAcZC,YAAW,WACM3D,SAAS4D,iBAAiB,mBAChCR,SAAQ,SAACS,GAAD,uBAAa,EAAKjB,gBAAlB,aAAa,EAAekB,QAAQD,QACpD,KAGL7D,SAAS+D,iBAAiB,QAAShE,KAAKiD,qBAAqB,K,kCAG/D,WACMjD,KAAK6C,UACP7C,KAAK6C,SAASoB,aAGhBhE,SAASiE,oBAAoB,QAASlE,KAAKiD,qBAAqB,K,iCAGlE,SAAoBX,GAClB,IAAM6B,EAAYnE,KAAK8C,OAAOsB,QAEf,MAAbD,GACA7B,EAAEkB,SAAWW,GACZA,EAAUE,SAAS/B,EAAEkB,SAEtBxD,KAAKc,SAAS,CAAEiC,iBAAiB,M,4BAIrC,SAAepD,GACb,IAAI2E,EAAYtE,KAAKuE,eAAe5E,EAAM6D,QACtCgB,EAAUvE,SAASC,eAAeoE,GAEvB,MAAXE,GACFtB,OAAOuB,SAAS,CACdC,IAAKF,EAAQG,UACbC,SAAU,a,4BAKhB,SAAuBJ,GACrB,IAAIV,EAAUU,EAAQK,KAClBC,EAAQhB,EAAQiB,YAAY,KAEhC,OADgBjB,EAAQkB,OAAOF,GAAS,EAAIA,EAAQ,EAAI,K,oBAI1D,WACE9E,KAAKc,SAAS,CAAEiC,iBAAkB/C,KAAKqB,MAAM0B,oB,oBAG/C,WACE,OACE,qBAAK5D,UAAU,YAAY8F,IAAKjF,KAAK8C,OAArC,SACE,eAACoC,EAAA,EAAD,CACEC,MAAM,EACNC,OAAO,KACPjG,UAAU,6CACVC,GAAG,gBAJL,UAME,cAACiG,EAAA,EAAD,CAAaR,KAAK,QAAQS,aAAW,OAAOlG,GAAG,aAA/C,SACE,qBAAKmG,IAAI,oBAAoBC,IAAI,GAAG3D,OAAQ,GAAID,MAAO,OAGzD,cAAC6D,EAAA,EAAD,CACEpD,QAASrC,KAAKyB,OACdiE,cAAY,WACZC,cAAY,sBACZC,gBAAc,qBACdC,gBAAe7F,KAAKqB,MAAM0B,kBAG5B,cAAC+C,EAAA,EAAD,CACE1G,GAAG,qBACH2G,QAAQ,EACRvE,OAAQxB,KAAKqB,MAAM0B,gBAHrB,SAKE,eAACiD,EAAA,EAAD,CAAK7G,UAAU,0BAA0B4G,QAAQ,EAAME,IAAI,MAA3D,UACE,mBACE9G,UAAS,4BACe,SAAtBa,KAAKqB,MAAMkB,OAAoB,SAAW,GADnC,aAGTsC,KAAK,QACLxC,QAASrC,KAAKgD,eALhB,sBASA,mBACE7D,UAAS,4BACe,UAAtBa,KAAKqB,MAAMkB,OAAqB,SAAW,GADpC,aAGTsC,KAAK,SACLxC,QAASrC,KAAKgD,eALhB,mBASA,mBACE7D,UAAS,4BACe,aAAtBa,KAAKqB,MAAMkB,OAAwB,SAAW,GADvC,aAGTsC,KAAK,YACLxC,QAASrC,KAAKgD,eALhB,oC,GApIsBlE,cCEfoH,E,kDACnB,WAAYhH,GAAQ,uCACZA,G,0CAGR,WACE,OACE,qCACE,cAAC,EAAD,CAAcY,sBAAsB,IACpC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAcA,sBAAsB,W,GAZRhB,IAAMqH,WCFrBC,E,4JACnB,WACE,OACE,8BACE,cAAC,EAAD,U,GAJyBtH,IAAMqH,WCQjCE,G,MAAcC,QACW,cAA7BpD,OAAOqD,SAASC,UAEe,UAA7BtD,OAAOqD,SAASC,UAEhBtD,OAAOqD,SAASC,SAASC,MAAM,4DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9F,QACfwF,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,+GAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MC3FjEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9H,SAASC,eAAe,SDanB,SAAkB0G,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,UAAwB/E,OAAOqD,SAAS1B,MACpDqD,SAAWhF,OAAOqD,SAAS2B,OAIvC,OAGFhF,OAAOc,iBAAiB,QAAQ,WAC9B,IAAM2C,EAAK,UAAMsB,UAAN,sBAEP5B,GAgEV,SAAiCM,EAAeC,GAE9CuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5BpB,MAAK,SAACqB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAACC,GAClCA,EAAa0B,aAAa3B,MAAK,WAC7B9D,OAAOqD,SAASqC,eAKpBlC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IAAI,oEAtFVqB,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,OClC7BE,CAAuB,CACrBW,SAAS,WAAD,4BAAE,WAAOR,GAAP,SAAA6B,EAAA,0DAIJ7B,IAAgBA,EAAa8B,QAJzB,gCAKA9B,EAAa0B,aALb,OAQNzF,OAAOqD,SAASqC,SARV,2CAAF,mDAAC,O","file":"static/js/main.36e01f77.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport './Assets/content.scss';\r\n\r\nconst AboutMe = React.lazy(\r\n  () => import(/* webpackChunkName: 'AboutMe' */ './AboutMe')\r\n);\r\nconst Blogs = React.lazy(\r\n  () => import(/* webpackChunkName: 'Blogs' */ './Blogs')\r\n);\r\nconst Projects = React.lazy(\r\n  () => import(/* webpackChunkName: 'Projects' */ './Projects')\r\n);\r\n\r\nexport default class Content extends React.Component<{}, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"main scroller\" id=\"main\" data-offset=\"0\">\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n          <AboutMe />\r\n          <Blogs />\r\n          <Projects />\r\n        </React.Suspense>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default class FocusTrapper extends React.Component<\r\n  { IsCurrentElementLast: boolean },\r\n  {}\r\n> {\r\n  private homeButton;\r\n  private themeButton;\r\n\r\n  componentDidMount() {\r\n    this.homeButton = document.getElementById('homeButton');\r\n    this.themeButton = document.getElementById('themeMenu');\r\n  }\r\n\r\n  onFocus = (event: React.FocusEvent<HTMLDivElement>) => {\r\n    var firstFocusable = this.homeButton;\r\n    var lastFocusable = this.themeButton;\r\n\r\n    if (this.props.IsCurrentElementLast) {\r\n      firstFocusable?.focus();\r\n    } else {\r\n      lastFocusable?.focus();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div tabIndex={0} onFocus={this.onFocus}></div>;\r\n  }\r\n}\r\n","export function setTheme(isDark: boolean) {\r\n  if (isDark) {\r\n    document.documentElement.classList.add('theme-dark');\r\n    document.documentElement.classList.remove('theme-light');\r\n  } else {\r\n    document.documentElement.classList.add('theme-light');\r\n    document.documentElement.classList.remove('theme-dark');\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n} from 'reactstrap';\r\nimport { setTheme } from './SetTheme';\r\n\r\nexport default class ThemeMenu extends React.Component<\r\n  {},\r\n  { isThemeOpen: boolean; currentTheme: string }\r\n> {\r\n  private themeKey: Readonly<string> = 'selectedTheme';\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleThemeMenuOpen = this.toggleThemeMenuOpen.bind(this);\r\n\r\n    // Set theme from local storage\r\n    const currentTheme = localStorage.getItem(this.themeKey);\r\n    if (currentTheme !== null) {\r\n      setTheme(currentTheme === 'Dark Theme');\r\n      this.state = {\r\n        currentTheme,\r\n        isThemeOpen: false,\r\n      };\r\n    } else {\r\n      this.state = {\r\n        currentTheme: 'Dark Theme',\r\n        isThemeOpen: false,\r\n      };\r\n      setTheme(true);\r\n      localStorage.setItem(this.themeKey, 'Dark Theme');\r\n    }\r\n\r\n    // this.state = {\r\n    //   currentTheme: 'Light Theme',\r\n    //   isThemeOpen: false,\r\n    // };\r\n\r\n    // setTheme(false);\r\n  }\r\n\r\n  toggleThemeMenuOpen() {\r\n    this.setState({ isThemeOpen: !this.state.isThemeOpen });\r\n  }\r\n\r\n  setSelectedTheme = (isDark) => {\r\n    let selectedTheme = isDark ? 'Dark Theme' : 'Light Theme';\r\n    this.setState({ currentTheme: selectedTheme });\r\n    setTheme(isDark);\r\n    localStorage.setItem(this.themeKey, selectedTheme);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropup\">\r\n        <Dropdown\r\n          isOpen={this.state.isThemeOpen}\r\n          toggle={this.toggleThemeMenuOpen}\r\n        >\r\n          <DropdownToggle caret id=\"themeMenu\">\r\n            <svg\r\n              width=\"1.2em\"\r\n              height=\"1.2em\"\r\n              viewBox=\"0 0 16 16\"\r\n              className=\"bi bi-gear mr-2 mb-1\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8.837 1.626c-.246-.835-1.428-.835-1.674 0l-.094.319A1.873 1.873 0 0 1 4.377 3.06l-.292-.16c-.764-.415-1.6.42-1.184 1.185l.159.292a1.873 1.873 0 0 1-1.115 2.692l-.319.094c-.835.246-.835 1.428 0 1.674l.319.094a1.873 1.873 0 0 1 1.115 2.693l-.16.291c-.415.764.42 1.6 1.185 1.184l.292-.159a1.873 1.873 0 0 1 2.692 1.116l.094.318c.246.835 1.428.835 1.674 0l.094-.319a1.873 1.873 0 0 1 2.693-1.115l.291.16c.764.415 1.6-.42 1.184-1.185l-.159-.291a1.873 1.873 0 0 1 1.116-2.693l.318-.094c.835-.246.835-1.428 0-1.674l-.319-.094a1.873 1.873 0 0 1-1.115-2.692l.16-.292c.415-.764-.42-1.6-1.185-1.184l-.291.159A1.873 1.873 0 0 1 8.93 1.945l-.094-.319zm-2.633-.283c.527-1.79 3.065-1.79 3.592 0l.094.319a.873.873 0 0 0 1.255.52l.292-.16c1.64-.892 3.434.901 2.54 2.541l-.159.292a.873.873 0 0 0 .52 1.255l.319.094c1.79.527 1.79 3.065 0 3.592l-.319.094a.873.873 0 0 0-.52 1.255l.16.292c.893 1.64-.902 3.434-2.541 2.54l-.292-.159a.873.873 0 0 0-1.255.52l-.094.319c-.527 1.79-3.065 1.79-3.592 0l-.094-.319a.873.873 0 0 0-1.255-.52l-.292.16c-1.64.893-3.433-.902-2.54-2.541l.159-.292a.873.873 0 0 0-.52-1.255l-.319-.094c-1.79-.527-1.79-3.065 0-3.592l.319-.094a.873.873 0 0 0 .52-1.255l-.16-.292c-.892-1.64.902-3.433 2.541-2.54l.292.159a.873.873 0 0 0 1.255-.52l.094-.319z\"\r\n              />\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8 5.754a2.246 2.246 0 1 0 0 4.492 2.246 2.246 0 0 0 0-4.492zM4.754 8a3.246 3.246 0 1 1 6.492 0 3.246 3.246 0 0 1-6.492 0z\"\r\n              />\r\n            </svg>\r\n            <span className=\"mr-1\">Theme</span>\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              onClick={(e) => this.setSelectedTheme(true)}\r\n              active={this.state.currentTheme === 'Dark Theme'}\r\n            >\r\n              <div className=\"themeItem\">\r\n                <svg\r\n                  width=\"1.2em\"\r\n                  height=\"1.2em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  className=\"bi bi-moon mr-2 mb-1\"\r\n                  fill=\"currentColor\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M14.53 10.53a7 7 0 0 1-9.058-9.058A7.003 7.003 0 0 0 8 15a7.002 7.002 0 0 0 6.53-4.47z\"\r\n                  />\r\n                </svg>\r\n                Dark Theme\r\n              </div>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              onClick={(e) => this.setSelectedTheme(false)}\r\n              active={this.state.currentTheme === 'Light Theme'}\r\n            >\r\n              <div className=\"themeItem\">\r\n                <svg\r\n                  width=\"1.2em\"\r\n                  height=\"1.2em\"\r\n                  viewBox=\"0 0 16 16\"\r\n                  className=\"bi bi-brightness-high mr-2 mb-1\"\r\n                  fill=\"currentColor\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\"\r\n                  />\r\n                </svg>\r\n                Light Theme\r\n              </div>\r\n            </DropdownItem>\r\n            {/* <DropdownItem\r\n                  onClick={(e) =>\r\n                    this.setState({ currentTheme: 'High Constrast Theme' })\r\n                  }\r\n                  active={this.state.currentTheme === 'High Constrast Theme'}\r\n                >\r\n                  High Constrast Theme\r\n                </DropdownItem> */}\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport './Assets/footer.scss';\r\nimport ThemeMenu from './ThemeMenu';\r\n\r\nexport default class Footer extends React.Component<{}, {}> {\r\n  render() {\r\n    return (\r\n      <footer role=\"contentinfo\" className=\"footer\">\r\n        <div className=\"centered\">\r\n          <ThemeMenu />\r\n          <div>© Chirag Rupani {new Date().getFullYear()}</div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler } from 'reactstrap';\r\nimport './Assets/header.scss';\r\n\r\nexport default class Header extends React.Component<\r\n  {},\r\n  { active: string; isNavMenuOpened: boolean }\r\n> {\r\n  observer: IntersectionObserver | null = null;\r\n\r\n  navRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.navRef = React.createRef();\r\n    this.state = { active: '', isNavMenuOpened: false };\r\n    this.onSectionClick = this.onSectionClick.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let options = {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: [0.1],\r\n    };\r\n\r\n    if (window.IntersectionObserver) {\r\n      let callback: IntersectionObserverCallback = (entries, observer) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            this.setState({ active: entry.target.id });\r\n          }\r\n        });\r\n      };\r\n\r\n      this.observer = new IntersectionObserver(callback, options);\r\n\r\n      setTimeout(() => {\r\n        let sections = document.querySelectorAll('#main > section');\r\n        sections.forEach((section) => this.observer?.observe(section));\r\n      }, 1000);\r\n    }\r\n\r\n    document.addEventListener('click', this.handleDocumentClick, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.observer) {\r\n      this.observer.disconnect();\r\n    }\r\n\r\n    document.removeEventListener('click', this.handleDocumentClick, true);\r\n  }\r\n\r\n  handleDocumentClick(e) {\r\n    const container = this.navRef.current;\r\n    if (\r\n      container != null &&\r\n      e.target !== container &&\r\n      !container.contains(e.target)\r\n    ) {\r\n      this.setState({ isNavMenuOpened: false });\r\n    }\r\n  }\r\n\r\n  onSectionClick(event: React.MouseEvent<HTMLAnchorElement>) {\r\n    let sectionID = this.getSectionName(event.target as HTMLAnchorElement);\r\n    let element = document.getElementById(sectionID);\r\n\r\n    if (element != null) {\r\n      window.scrollTo({\r\n        top: element.offsetTop,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  private getSectionName(element: HTMLAnchorElement) {\r\n    let section = element.href;\r\n    let index = section.lastIndexOf('#');\r\n    let sectionID = section.substr(index >= 0 ? index + 1 : 0);\r\n    return sectionID;\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ isNavMenuOpened: !this.state.isNavMenuOpened });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" ref={this.navRef}>\r\n        <Navbar\r\n          dark={true}\r\n          expand=\"md\"\r\n          className=\"navbar-custom fixed-top d-flex text-center\"\r\n          id=\"projectNavbar\"\r\n        >\r\n          <NavbarBrand href=\"#Home\" aria-label=\"Home\" id=\"homeButton\">\r\n            <img src=\"favicon-32x32.png\" alt=\"\" height={32} width={32}></img>\r\n          </NavbarBrand>\r\n\r\n          <NavbarToggler\r\n            onClick={this.toggle}\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNavAltMarkup\"\r\n            aria-controls=\"navbarNavAltMarkup\"\r\n            aria-expanded={this.state.isNavMenuOpened}\r\n          />\r\n\r\n          <Collapse\r\n            id=\"navbarNavAltMarkup\"\r\n            navbar={true}\r\n            isOpen={this.state.isNavMenuOpened}\r\n          >\r\n            <Nav className=\"ml-auto text-right pr-3\" navbar={true} tag=\"div\">\r\n              <a\r\n                className={`nav-item nav-link ${\r\n                  this.state.active === 'Home' ? 'active' : ''\r\n                } pageLink`}\r\n                href=\"#Home\"\r\n                onClick={this.onSectionClick}\r\n              >\r\n                About Me\r\n              </a>\r\n              <a\r\n                className={`nav-item nav-link ${\r\n                  this.state.active === 'Blogs' ? 'active' : ''\r\n                } pageLink`}\r\n                href=\"#Blogs\"\r\n                onClick={this.onSectionClick}\r\n              >\r\n                Blogs\r\n              </a>\r\n              <a\r\n                className={`nav-item nav-link ${\r\n                  this.state.active === 'Projects' ? 'active' : ''\r\n                } pageLink`}\r\n                href=\"#Projects\"\r\n                onClick={this.onSectionClick}\r\n              >\r\n                Projects\r\n              </a>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Content from './Content';\r\nimport FocusTrapper from './FocusTrapper';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\n\r\nexport default class Layout extends React.Component<{}, {}> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <FocusTrapper IsCurrentElementLast={false} />\r\n        <Header />\r\n        <Content />\r\n        <Footer />\r\n        <FocusTrapper IsCurrentElementLast={true} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './Assets/App.scss';\nimport Layout from './Layout';\n\nexport default class App extends React.Component<{}, {}> {\n  render() {\n    return (\n      <div>\n        <Layout />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Assets/index.scss';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'production') {\n  serviceWorker.register({\n    onUpdate: async (registration) => {\n      // We want to run this code only if we detect a new service worker is\n      // waiting to be activated.\n      // Details about it: https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle\n      if (registration && registration.waiting) {\n        await registration.unregister();\n        // Once the service worker is unregistered, we can reload the page to let\n        // the browser download a fresh copy of our app (invalidating the cache)\n        window.location.reload();\n      }\n    },\n  });\n} else {\n  serviceWorker.unregister();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}